linux build image:
    stage: prepare
    image: docker:latest

    only:
        changes:
            - .gitlab/build/linux.Dockerfile

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker system info
        - docker build -t $CI_REGISTRY_IMAGE/build:linux - < .gitlab/build/linux.Dockerfile
        - docker image ls
        - docker login registry.tivolicloud.com --username gitlab-ci-token --password $CI_JOB_TOKEN
        - docker push $CI_REGISTRY_IMAGE/build:linux

linux arm64 build image:
    stage: prepare
    image: docker:latest
    tags:
        - arm64

    only:
        changes:
            - .gitlab/build/linux-arm64.Dockerfile

    variables:
        DOCKER_TLS_CERTDIR: ""

    services:
        - docker:dind

    script:
        - docker system info
        - docker build -t $CI_REGISTRY_IMAGE/build:linux-arm64 - < .gitlab/build/linux-arm64.Dockerfile
        - docker image ls
        - docker login registry.tivolicloud.com --username gitlab-ci-token --password $CI_JOB_TOKEN
        - docker push $CI_REGISTRY_IMAGE/build:linux-arm64

all linux:
    stage: build
    image: $CI_REGISTRY_IMAGE/build:linux

    extends: .production

    variables:
        BUILD_TYPE: Release
        RELEASE_TYPE: PRODUCTION
        STABLE_BUILD: 1

        RELEASE_NUMBER: $CI_COMMIT_TAG

        TIVOLI_QT_BASE: $CI_PROJECT_DIR/build/TIVOLI_QT
        TIVOLI_VCPKG_BASE: $CI_PROJECT_DIR/build/TIVOLI_VCPKG


        # CMAKE_BACKTRACE_URL: https://o320671.ingest.sentry.io/api/5265062/minidump/?sentry_key=e4f9d26e25d94299b04d94bedcbf4633
        # SENTRY_AUTH_TOKEN
        # SENTRY_ORG: tivolicloud

    cache:
        paths:
            - build/TIVOLI_QT
            - build/TIVOLI_VCPKG

    script:
        - mkdir -p build
        - cd build
        - /usr/local/bin/cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        - make interface domain-server assignment-client oven ice-server -j$(nproc)

        # upload symbols and sources to sentry
        # - sentry-cli upload-dif --include-sources -p interface interface

        # make AppDirs
        - python3 ../tools/make_appdir.py interface .
        - python3 ../tools/make_appdir.py server .
        - python3 ../tools/make_appdir.py ice-server .

    artifacts:
        expire_in: 1 day
        paths:
            - build/interface/interface.AppDir
            - build/server.AppDir
            - build/ice-server.AppDir

server linux arm64:
    stage: build
    image: $CI_REGISTRY_IMAGE/build:linux-arm64
    tags:
        - arm64

    extends: .production

    variables:
        BUILD_TYPE: Release
        RELEASE_TYPE: PRODUCTION
        STABLE_BUILD: 1

        RELEASE_NUMBER: $CI_COMMIT_TAG

        TIVOLI_QT_BASE: $CI_PROJECT_DIR/build/TIVOLI_QT
        TIVOLI_VCPKG_BASE: $CI_PROJECT_DIR/build/TIVOLI_VCPKG

    cache:
        paths:
            - build/TIVOLI_QT
            - build/TIVOLI_VCPKG

    script:
        - mkdir -p build
        - cd build
        - /usr/local/bin/cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDISABLE_HIFI_CODEC=ON -DDISABLE_PCM_CODEC=ON
        - make domain-server assignment-client oven -j$(nproc)

        # make AppDir
        - python3 ../tools/make_appdir.py server .

    artifacts:
        expire_in: 1 day
        paths:
            - build/server.AppDir

launcher linux:
    stage: package
    image: archlinux:latest

    extends: .production

    needs:
        - job: all linux
          artifacts: true

    script:
        # deps
        - pacman -Syu --noconfirm git nodejs-lts-erbium npm yarn python binutils git openssh

        - rm -rf launcher # just incase
        - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@git.tivolicloud.com/tivolicloud/launcher
        - mkdir -p launcher/interface
        - mv build/interface/interface.AppDir launcher/interface # interface.AppDir is a folder

        - cd launcher/.gitlab
        - yarn install
        - node prepare.js # needs CI_COMMIT_TAG
        - cd ..

        - yarn install
        - yarn build
        - yarn package
        - cd ..

        # publish to aur

        - mkdir -p ~/.ssh
        - cp $AUR_SSH_KEY ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa

        - echo "Host aur.archlinux.org" > ~/.ssh/config
        - echo "    StrictHostKeyChecking no" >> ~/.ssh/config
        - git clone ssh://aur@aur.archlinux.org/tivoli-cloud-vr-bin.git
        - git config --global user.name "Tivoli Cloud VR"
        - git config --global user.email "maki@tivolicloud.com"

        - cd tivoli-cloud-vr-bin
        - mv ../.gitlab/aur/* .
        - 'sed -i ''s/$VERSION/''"$CI_COMMIT_TAG"''/g'' PKGBUILD'

        - useradd -m tivoli && usermod -L tivoli
        - 'echo "tivoli ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
        - 'echo "root ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
        - chown -R tivoli:tivoli .
        - su tivoli
        - makepkg --printsrcinfo > .SRCINFO
        - exit
        - chown -R root:root .

        - git add -A
        - git commit -am "Updated to version $CI_COMMIT_TAG"
        - git push --force

    artifacts:
        expire_in: 1 day
        paths:
            - launcher/dist/*.AppImage
            - launcher/dist/*.pacman
            - launcher/dist/*.deb
            - launcher/dist/*.yml
