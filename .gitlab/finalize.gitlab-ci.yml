finalize server:
    stage: finalize
    image: docker:latest

    extends: .production
    allow_failure: false

    variables:
        DOCKER_TLS_CERTDIR: ""

    needs:
        - upload server
        - upload server arm64

    services:
        - name: docker:dind
          command: ["--experimental"]

    script:
        - mkdir -p ~/.docker
        - 'echo ''{"experimental": "enabled"}'' > ~/.docker/config.json'

        - docker system info
        - docker image ls

        # login

        - docker login registry.tivolicloud.com -u gitlab-ci-token -p $CI_JOB_TOKEN
        - docker login -u makitsune -p $DOCKER_HUB_ACCESS_TOKEN

        # create manifests for our registry and upload

        - docker manifest create $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG
          --amend $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64
          --amend $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64

        - docker manifest create $CI_REGISTRY_IMAGE/server:latest
          --amend $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64
          --amend $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64

        - docker manifest push $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG
        - docker manifest push $CI_REGISTRY_IMAGE/server:latest

        # upload and create manifests for docker hub

        - docker pull $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64
        - docker pull $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64
        - docker tag $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64 tivolicloud/server:$CI_COMMIT_TAG-amd64
        - docker tag $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64 tivolicloud/server:$CI_COMMIT_TAG-arm64
        - docker push tivolicloud/server:$CI_COMMIT_TAG-amd64
        - docker push tivolicloud/server:$CI_COMMIT_TAG-arm64

        - docker manifest create tivolicloud/server:$CI_COMMIT_TAG
          --amend tivolicloud/server:$CI_COMMIT_TAG-amd64
          --amend tivolicloud/server:$CI_COMMIT_TAG-arm64

        - docker manifest create tivolicloud/server:latest
          --amend tivolicloud/server:$CI_COMMIT_TAG-amd64
          --amend tivolicloud/server:$CI_COMMIT_TAG-arm64

        - docker manifest push tivolicloud/server:$CI_COMMIT_TAG
        - docker manifest push tivolicloud/server:latest

        # # delete build tags

        # - apk add wget
        # - wget -O /usr/bin/reg https://github.com/genuinetools/reg/releases/download/v0.16.1/reg-linux-amd64
        # - chmod +x /usr/bin/reg

        # - reg rm $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-amd64
        # - reg rm $CI_REGISTRY_IMAGE/server:$CI_COMMIT_TAG-arm64

        # - reg rm tivolicloud/server:$CI_COMMIT_TAG-amd64
        # - reg rm tivolicloud/server:$CI_COMMIT_TAG-arm64

        - echo

publish to aur:
    stage: finalize
    image: archlinux:latest

    extends: .production

    needs:
        - upload launcher

    script:
        - mkdir -p ~/.ssh
        - cp $AUR_SSH_KEY ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa

        - echo "Host aur.archlinux.org" > ~/.ssh/config
        - echo "    StrictHostKeyChecking no" >> ~/.ssh/config
        - git clone ssh://aur@aur.archlinux.org/tivoli-cloud-vr-bin.git
        - git config --global user.name "Tivoli Cloud VR"
        - git config --global user.email "maki@tivolicloud.com"

        - cd tivoli-cloud-vr-bin
        - mv ../.gitlab/aur/* .
        - 'sed -i ''s/$VERSION/''"$CI_COMMIT_TAG"''/g'' PKGBUILD'

        - useradd -m tivoli && usermod -L tivoli
        - 'echo "tivoli ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
        - 'echo "root ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
        - chown -R tivoli:tivoli .
        - su tivoli
        - makepkg --printsrcinfo > .SRCINFO
        - exit
        - chown -R root:root .

        - git add -A
        - git commit -am "Updated to version $CI_COMMIT_TAG"
        - git push --force
